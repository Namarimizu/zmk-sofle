#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    HRM_LEFT: HRM_LEFT {
        compatible = "zmk,behavior-hold-tap";
        label = "HRM_LEFT";
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;

        tapping-term-ms = <280>;
        require-prior-idle-ms = <130>;
        flavor = "balanced";
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 59 60 61 62 63>;
        hold-trigger-on-release;
    };

    HRM_RIGHT: HRM_RIGHT {
        compatible = "zmk,behavior-hold-tap";
        label = "HRM_RIGHT";
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;

        tapping-term-ms = <280>;
        require-prior-idle-ms = <130>;
        flavor = "balanced";
        hold-trigger-on-release;
        hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 52 53 54 55 56 57>;
    };

    left_parenthesis_ex: left_parenthesis_ex {
        compatible = "zmk,behavior-mod-morph";
        label = "LEFT_PARENTHESIS_EX";
        bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI)>;
    };

    right_parenthesis_ex: right_parenthesis_ex {
        compatible = "zmk,behavior-mod-morph";
        label = "RIGHT_PARENTHESIS_EX";
        bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI)>;
    };

    comma_ex: comma_ex {
        compatible = "zmk,behavior-mod-morph";
        label = "COMMA_EX";
        bindings = <&kp COMMA>, <&kp SEMICOLON>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    period_ex: period_ex {
        compatible = "zmk,behavior-mod-morph";
        label = "PERIOD_EX";
        bindings = <&kp PERIOD>, <&kp COLON>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    question_ex: question_ex {
        compatible = "zmk,behavior-mod-morph";
        label = "QUESTION_EX";
        bindings = <&kp QUESTION>, <&kp EXCLAMATION>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    left_bracket_ex: left_bracket_ex {
        compatible = "zmk,behavior-mod-morph";
        label = "LEFT_BRACKET_EX";
        bindings = <&kp LEFT_BRACKET>, <&kp LEFT_BRACE>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI)>;
    };

    right_bracket_ex: right_bracket_ex {
        compatible = "zmk,behavior-mod-morph";
        label = "RIGHT_BRACKET_EX";
        bindings = <&kp RIGHT_BRACKET>, <&kp RIGHT_BRACE>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI)>;
    };

    combos {
        compatible = "zmk,combos";

        R_Bracket {
            bindings = <&right_bracket_ex>;
            key-positions = <29 30>;
        };

        L_Bracket {
            bindings = <&left_bracket_ex>;
            key-positions = <29 28>;
        };

        combo_F1 {
            bindings = <&kp F1>;
            key-positions = <1 14>;
        };

        combo_F2 {
            bindings = <&kp F2>;
            key-positions = <2 15>;
        };

        combo_F3 {
            bindings = <&kp F3>;
            key-positions = <3 16>;
        };

        combo_F4 {
            bindings = <&kp F4>;
            key-positions = <4 17>;
        };

        combo_F5 {
            bindings = <&kp F5>;
            key-positions = <5 18>;
        };

        combo_F6 {
            bindings = <&kp F6>;
            key-positions = <7 20>;
        };

        combo_F7 {
            bindings = <&kp F7>;
            key-positions = <8 21>;
        };

        combo_F8 {
            bindings = <&kp F8>;
            key-positions = <9 22>;
        };

        combo_F9 {
            bindings = <&kp F9>;
            key-positions = <10 23>;
        };

        combo_F10 {
            bindings = <&kp F10>;
            key-positions = <11 24>;
        };

        combo_lpar {
            bindings = <&left_parenthesis_ex>;
            key-positions = <35 34>;
        };

        combo_rpar {
            bindings = <&right_parenthesis_ex>;
            key-positions = <35 36>;
        };

        combo_ctrlc {
            bindings = <&kp LC(C)>;
            key-positions = <41 42>;
        };

        combo_ctrlv {
            bindings = <&kp LC(V)>;
            key-positions = <43 42>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Main {
            bindings = <
&kp CAPSLOCK    &kp N1                &kp N2                &kp N3                  &kp N4                    &kp N5         &kp UP_ARROW     &kp N6       &kp N7                     &kp N8                   &kp N9                 &kp N0                    &kp DELETE
&kp TAB         &kp Q                 &kp W                 &kp E                   &kp R                     &kp T          &kp DOWN_ARROW   &kp Y        &kp U                      &kp I                    &kp O                  &kp P                     &kp BACKSPACE
&kp LEFT_SHIFT  &HRM_LEFT LEFT_GUI A  &HRM_LEFT LEFT_ALT S  &HRM_LEFT LEFT_SHIFT D  &HRM_LEFT LEFT_CONTROL F  &kp G          &kp LEFT_ARROW   &kp H        &HRM_RIGHT LEFT_CONTROL J  &HRM_RIGHT LEFT_SHIFT K  &HRM_RIGHT LEFT_ALT L  &HRM_RIGHT LEFT_GUI SEMI  &mt RIGHT_SHIFT APOSTROPHE
&kp LCTRL       &kp Z                 &kp X                 &kp C                   &kp V                     &kp B          &kp RIGHT_ARROW  &kp N        &kp M                      &comma_ex                &period_ex             &question_ex              &kp BACKSLASH
&kp C_MUTE      &kp ESCAPE            &sk LEFT_GUI          &sk LEFT_ALT            &mo 2                     &lt 2 SPACE    &kp ENTER        &lt 2 SPACE  &kp ENTER                  &kp LEFT_ARROW           &kp RIGHT_ARROW        &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Main";
        };

        hrm_block {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans         &trans
&trans  &kp A   &kp S   &kp D   &kp F   &trans    &trans  &trans  &kp J   &kp K   &kp L   &kp SEMICOLON  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Ex {
            bindings = <
&rgb_ug RGB_TOG  &kp F1        &kp F2         &kp F3        &kp F4        &kp F5     &mmv MOVE_UP     &kp F6     &kp F7    &kp F8      &kp F9     &kp F10         &mo 3
&trans           &kp TILDE     &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9  &trans     &mmv MOVE_DOWN   &kp PG_UP  &kp HOME  &kp UP      &kp END    &kp UNDERSCORE  &kp PLUS
&trans           &kp NUMBER_0  &kp NUMBER_4   &kp N5        &kp NUMBER_6  &trans     &mmv MOVE_LEFT   &kp PG_DN  &kp LEFT  &kp DOWN    &kp RIGHT  &kp MINUS       &kp EQUAL
&trans           &kp GRAVE     &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &trans     &mmv MOVE_RIGHT  &trans     &trans    &kp INSERT  &kp F11    &kp F12         &kp PRINTSCREEN
&kp C_MUTE       &trans        &kp BACKSPACE  &trans        &trans        &kp RET    &mkp LCLK        &tog 1     &trans    &trans      &trans     &trans
            >;

            display-name = "Ex";
            sensor-bindings = <&scroll_encoder>;
        };

        Misc {
            bindings = <
&trans           &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4    &mmv MOVE_UP     &trans  &trans  &trans  &trans  &trans  &trans
&trans           &bt BT_CLR       &bt BT_CLR_ALL   &out OUT_BLE     &out OUT_USB     &soft_off       &mmv MOVE_DOWN   &trans  &trans  &trans  &trans  &trans  &trans
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans          &mmv MOVE_LEFT   &trans  &trans  &trans  &trans  &trans  &trans
&rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans          &mmv MOVE_RIGHT  &trans  &trans  &trans  &trans  &trans  &trans
&trans           &trans           &trans           &trans           &trans           &tog 4          &mkp LCLK        &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Misc";
        };

        Space {
            bindings = <
&tog 4  &trans  &trans  &trans  &trans  &trans       &trans  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &mo 2   &kp SPACE    &trans  &lt 2 SPACE  &trans  &trans  &trans  &trans
            >;

            label = "Space";
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
